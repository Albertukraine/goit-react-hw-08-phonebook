{"version":3,"file":"static/js/602.8a6f861d.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/Form/Form.module.css?89ba","../node_modules/nanoid/index.browser.js","components/Form/Form.jsx","components/Filter/Filter.jsx","../node_modules/@chakra-ui/layout/dist/chunk-6FWJQRCB.mjs","../node_modules/@chakra-ui/avatar/dist/chunk-QVBG3QXJ.mjs","../node_modules/@chakra-ui/avatar/dist/chunk-XLTSJSZV.mjs","../node_modules/@chakra-ui/avatar/dist/chunk-ZXZNYCCD.mjs","../node_modules/@chakra-ui/avatar/dist/chunk-RBT32FI6.mjs","../node_modules/@chakra-ui/image/dist/chunk-HR33I6FK.mjs","../node_modules/@chakra-ui/avatar/dist/chunk-MASXGPYE.mjs","../node_modules/@chakra-ui/layout/dist/chunk-Z47J5YMH.mjs","../node_modules/@chakra-ui/react-children-utils/dist/index.mjs","components/NameList/NameList.jsx","pages/Phonebook.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Form_form__e1yzW\",\"input\":\"Form_input__FTtTw\",\"button\":\"Form_button__8NOIT\"};","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","import style from './Form.module.css';\nimport React from 'react';\nimport { useState } from 'react';\n// import { setContact } from 'redux/contactsSlice';\nimport { setContact } from 'redux/operations';\nimport { useDispatch } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport { useSelector } from 'react-redux';\n\nimport { FormControl } from '@chakra-ui/react';\nimport { Input } from '@chakra-ui/react';\nimport { Button } from '@chakra-ui/react';\nimport { FormLabel } from '@chakra-ui/react';\n\nexport const Form = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const dispatch = useDispatch();\n\n  const handleInputChange = evt => {\n    const { name, value } = evt.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n  const contacts = useSelector(state => state.numberValue);\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    // console.log('submit contacts value',contacts.value);\n    // console.log(name);\n\n    if (contacts.value.map(item => item.name).includes(name))\n      return alert(`${name} is already in contacts`);\n    dispatch(setContact({ id: nanoid(), number: number, name: name }));\n    reset();\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n\n    <FormControl >\n      <FormLabel>Name</FormLabel>\n      <Input\n        className={style.input}\n        onChange={handleInputChange}\n        value={name}\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Boris Johnsoniuk\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n      <FormLabel>Number</FormLabel>\n      <Input mb='8px'\n        className={style.input}\n        onChange={handleInputChange}\n        value={number}\n        type=\"tel\"\n        name=\"number\"\n        placeholder=\"+123456789\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n      <Button type=\"submit\">Add Contact</Button>\n      </FormControl>\n    </form>\n  );\n};\n\n","import { setFilterValue } from 'redux/filterSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFilterValue } from 'redux/selectors';\nimport { FormControl } from '@chakra-ui/react';\nimport { Input } from '@chakra-ui/react';\nimport { FormLabel } from '@chakra-ui/react';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const value = useSelector(getFilterValue);\n\n  const handleInput = evt => {\n    const input = evt.target;\n    dispatch(setFilterValue(input.value));\n  };\n\n  return (\n    <FormControl>\n      <FormLabel>Find contacts by name</FormLabel>\n      <Input\n      mb={3}\n        onInput={handleInput}\n        value={value}\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Type name to find\"\n      />\n    </FormControl>\n  );\n};\n","// src/spacer.tsx\nimport { chakra } from \"@chakra-ui/system\";\nvar Spacer = chakra(\"div\", {\n  baseStyle: {\n    flex: 1,\n    justifySelf: \"stretch\",\n    alignSelf: \"stretch\"\n  }\n});\nSpacer.displayName = \"Spacer\";\n\nexport {\n  Spacer\n};\n","// src/avatar-context.tsx\nimport { createContext } from \"@chakra-ui/react-context\";\nvar [AvatarStylesProvider, useAvatarStyles] = createContext({\n  name: `AvatarStylesContext`,\n  hookName: `useAvatarStyles`,\n  providerName: \"<Avatar/>\"\n});\n\nexport {\n  AvatarStylesProvider,\n  useAvatarStyles\n};\n","import {\n  useAvatarStyles\n} from \"./chunk-QVBG3QXJ.mjs\";\n\n// src/avatar-name.tsx\nimport { chakra } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction initials(name) {\n  const [firstName, lastName] = name.split(\" \");\n  return firstName && lastName ? `${firstName.charAt(0)}${lastName.charAt(0)}` : firstName.charAt(0);\n}\nfunction AvatarName(props) {\n  const { name, getInitials, ...rest } = props;\n  const styles = useAvatarStyles();\n  return /* @__PURE__ */ jsx(chakra.div, { role: \"img\", \"aria-label\": name, ...rest, __css: styles.label, children: name ? getInitials == null ? void 0 : getInitials(name) : null });\n}\nAvatarName.displayName = \"AvatarName\";\n\nexport {\n  initials,\n  AvatarName\n};\n","// src/generic-avatar-icon.tsx\nimport { chakra } from \"@chakra-ui/system\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar GenericAvatarIcon = (props) => /* @__PURE__ */ jsxs(\n  chakra.svg,\n  {\n    viewBox: \"0 0 128 128\",\n    color: \"#fff\",\n    width: \"100%\",\n    height: \"100%\",\n    className: \"chakra-avatar__svg\",\n    ...props,\n    children: [\n      /* @__PURE__ */ jsx(\n        \"path\",\n        {\n          fill: \"currentColor\",\n          d: \"M103,102.1388 C93.094,111.92 79.3504,118 64.1638,118 C48.8056,118 34.9294,111.768 25,101.7892 L25,95.2 C25,86.8096 31.981,80 40.6,80 L87.4,80 C96.019,80 103,86.8096 103,95.2 L103,102.1388 Z\"\n        }\n      ),\n      /* @__PURE__ */ jsx(\n        \"path\",\n        {\n          fill: \"currentColor\",\n          d: \"M63.9961647,24 C51.2938136,24 41,34.2938136 41,46.9961647 C41,59.7061864 51.2938136,70 63.9961647,70 C76.6985159,70 87,59.7061864 87,46.9961647 C87,34.2938136 76.6985159,24 63.9961647,24\"\n        }\n      )\n    ]\n  }\n);\n\nexport {\n  GenericAvatarIcon\n};\n","import {\n  AvatarName\n} from \"./chunk-XLTSJSZV.mjs\";\nimport {\n  GenericAvatarIcon\n} from \"./chunk-ZXZNYCCD.mjs\";\n\n// src/avatar-image.tsx\nimport { useImage } from \"@chakra-ui/image\";\nimport { chakra } from \"@chakra-ui/system\";\nimport { cloneElement } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction AvatarImage(props) {\n  const {\n    src,\n    srcSet,\n    onError,\n    onLoad,\n    getInitials,\n    name,\n    borderRadius,\n    loading,\n    iconLabel,\n    icon = /* @__PURE__ */ jsx(GenericAvatarIcon, {}),\n    ignoreFallback,\n    referrerPolicy\n  } = props;\n  const status = useImage({ src, onError, ignoreFallback });\n  const hasLoaded = status === \"loaded\";\n  const showFallback = !src || !hasLoaded;\n  if (showFallback) {\n    return name ? /* @__PURE__ */ jsx(\n      AvatarName,\n      {\n        className: \"chakra-avatar__initials\",\n        getInitials,\n        name\n      }\n    ) : cloneElement(icon, {\n      role: \"img\",\n      \"aria-label\": iconLabel\n    });\n  }\n  return /* @__PURE__ */ jsx(\n    chakra.img,\n    {\n      src,\n      srcSet,\n      alt: name,\n      onLoad,\n      referrerPolicy,\n      className: \"chakra-avatar__img\",\n      loading,\n      __css: {\n        width: \"100%\",\n        height: \"100%\",\n        objectFit: \"cover\",\n        borderRadius\n      }\n    }\n  );\n}\nAvatarImage.displayName = \"AvatarImage\";\n\nexport {\n  AvatarImage\n};\n","// src/use-image.ts\nimport { useSafeLayoutEffect } from \"@chakra-ui/react-use-safe-layout-effect\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nfunction useImage(props) {\n  const {\n    loading,\n    src,\n    srcSet,\n    onLoad,\n    onError,\n    crossOrigin,\n    sizes,\n    ignoreFallback\n  } = props;\n  const [status, setStatus] = useState(\"pending\");\n  useEffect(() => {\n    setStatus(src ? \"loading\" : \"pending\");\n  }, [src]);\n  const imageRef = useRef();\n  const load = useCallback(() => {\n    if (!src)\n      return;\n    flush();\n    const img = new Image();\n    img.src = src;\n    if (crossOrigin)\n      img.crossOrigin = crossOrigin;\n    if (srcSet)\n      img.srcset = srcSet;\n    if (sizes)\n      img.sizes = sizes;\n    if (loading)\n      img.loading = loading;\n    img.onload = (event) => {\n      flush();\n      setStatus(\"loaded\");\n      onLoad == null ? void 0 : onLoad(event);\n    };\n    img.onerror = (error) => {\n      flush();\n      setStatus(\"failed\");\n      onError == null ? void 0 : onError(error);\n    };\n    imageRef.current = img;\n  }, [src, crossOrigin, srcSet, sizes, onLoad, onError, loading]);\n  const flush = () => {\n    if (imageRef.current) {\n      imageRef.current.onload = null;\n      imageRef.current.onerror = null;\n      imageRef.current = null;\n    }\n  };\n  useSafeLayoutEffect(() => {\n    if (ignoreFallback)\n      return void 0;\n    if (status === \"loading\") {\n      load();\n    }\n    return () => {\n      flush();\n    };\n  }, [status, load, ignoreFallback]);\n  return ignoreFallback ? \"loaded\" : status;\n}\nvar shouldShowFallbackImage = (status, fallbackStrategy) => status !== \"loaded\" && fallbackStrategy === \"beforeLoadOrError\" || status === \"failed\" && fallbackStrategy === \"onError\";\n\nexport {\n  useImage,\n  shouldShowFallbackImage\n};\n","import {\n  AvatarImage\n} from \"./chunk-RBT32FI6.mjs\";\nimport {\n  initials\n} from \"./chunk-XLTSJSZV.mjs\";\nimport {\n  AvatarStylesProvider\n} from \"./chunk-QVBG3QXJ.mjs\";\nimport {\n  GenericAvatarIcon\n} from \"./chunk-ZXZNYCCD.mjs\";\n\n// src/avatar.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { callAllHandlers, cx, dataAttr } from \"@chakra-ui/shared-utils\";\nimport { useState } from \"react\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar baseStyle = {\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  textAlign: \"center\",\n  textTransform: \"uppercase\",\n  fontWeight: \"medium\",\n  position: \"relative\",\n  flexShrink: 0\n};\nvar Avatar = forwardRef((props, ref) => {\n  const styles = useMultiStyleConfig(\"Avatar\", props);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const {\n    src,\n    srcSet,\n    name,\n    showBorder,\n    borderRadius = \"full\",\n    onError,\n    onLoad: onLoadProp,\n    getInitials = initials,\n    icon = /* @__PURE__ */ jsx(GenericAvatarIcon, {}),\n    iconLabel = \" avatar\",\n    loading,\n    children,\n    borderColor,\n    ignoreFallback,\n    ...rest\n  } = omitThemingProps(props);\n  const avatarStyles = {\n    borderRadius,\n    borderWidth: showBorder ? \"2px\" : void 0,\n    ...baseStyle,\n    ...styles.container\n  };\n  if (borderColor) {\n    avatarStyles.borderColor = borderColor;\n  }\n  return /* @__PURE__ */ jsx(\n    chakra.span,\n    {\n      ref,\n      ...rest,\n      className: cx(\"chakra-avatar\", props.className),\n      \"data-loaded\": dataAttr(isLoaded),\n      __css: avatarStyles,\n      children: /* @__PURE__ */ jsxs(AvatarStylesProvider, { value: styles, children: [\n        /* @__PURE__ */ jsx(\n          AvatarImage,\n          {\n            src,\n            srcSet,\n            loading,\n            onLoad: callAllHandlers(onLoadProp, () => {\n              setIsLoaded(true);\n            }),\n            onError,\n            getInitials,\n            name,\n            borderRadius,\n            icon,\n            iconLabel,\n            ignoreFallback\n          }\n        ),\n        children\n      ] })\n    }\n  );\n});\nAvatar.displayName = \"Avatar\";\n\nexport {\n  baseStyle,\n  Avatar\n};\n","// src/list.tsx\nimport { Icon } from \"@chakra-ui/icon\";\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [ListStylesProvider, useListStyles] = createContext({\n  name: `ListStylesContext`,\n  errorMessage: `useListStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<List />\" `\n});\nvar List = forwardRef(function List2(props, ref) {\n  const styles = useMultiStyleConfig(\"List\", props);\n  const {\n    children,\n    styleType = \"none\",\n    stylePosition,\n    spacing,\n    ...rest\n  } = omitThemingProps(props);\n  const validChildren = getValidChildren(children);\n  const selector = \"& > *:not(style) ~ *:not(style)\";\n  const spacingStyle = spacing ? { [selector]: { mt: spacing } } : {};\n  return /* @__PURE__ */ jsx(ListStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(\n    chakra.ul,\n    {\n      ref,\n      listStyleType: styleType,\n      listStylePosition: stylePosition,\n      role: \"list\",\n      __css: { ...styles.container, ...spacingStyle },\n      ...rest,\n      children: validChildren\n    }\n  ) });\n});\nList.displayName = \"List\";\nvar OrderedList = forwardRef((props, ref) => {\n  const { as, ...rest } = props;\n  return /* @__PURE__ */ jsx(List, { ref, as: \"ol\", styleType: \"decimal\", marginStart: \"1em\", ...rest });\n});\nOrderedList.displayName = \"OrderedList\";\nvar UnorderedList = forwardRef(function UnorderedList2(props, ref) {\n  const { as, ...rest } = props;\n  return /* @__PURE__ */ jsx(List, { ref, as: \"ul\", styleType: \"initial\", marginStart: \"1em\", ...rest });\n});\nUnorderedList.displayName = \"UnorderedList\";\nvar ListItem = forwardRef(function ListItem2(props, ref) {\n  const styles = useListStyles();\n  return /* @__PURE__ */ jsx(chakra.li, { ref, ...props, __css: styles.item });\n});\nListItem.displayName = \"ListItem\";\nvar ListIcon = forwardRef(function ListIcon2(props, ref) {\n  const styles = useListStyles();\n  return /* @__PURE__ */ jsx(Icon, { ref, role: \"presentation\", ...props, __css: styles.icon });\n});\nListIcon.displayName = \"ListIcon\";\n\nexport {\n  useListStyles,\n  List,\n  OrderedList,\n  UnorderedList,\n  ListItem,\n  ListIcon\n};\n","// src/index.ts\nimport { Children, isValidElement } from \"react\";\nfunction getValidChildren(children) {\n  return Children.toArray(children).filter(\n    (child) => isValidElement(child)\n  );\n}\nexport {\n  getValidChildren\n};\n","// import style from './NameList.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/operations';\nimport { getContacts, getFilterValue } from 'redux/selectors';\nimport { Button } from '@chakra-ui/react';\nimport { Spacer } from '@chakra-ui/react';\nimport { Avatar } from '@chakra-ui/react';\n\nimport {\n  List,\n  ListItem\n} from '@chakra-ui/react';\nimport { Text } from '@chakra-ui/react';\n\nexport const NameList = () => {\n  const dispatch = useDispatch();\n\n  const filterValueFromStore = useSelector(getFilterValue);\n  const contactsFromStore = useSelector(getContacts);\n\n  const normalizedFilter = filterValueFromStore.toLowerCase();\n  const contacts = contactsFromStore.value.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n\n  return (\n    <List>\n      {contacts.map(contact => (\n        <ListItem display='flex' key={contact.id} alignItems='center' mb={3}>\n\n         <Avatar name={contact.name} mr={3}></Avatar>\n            <Text as='b'> {contact.name}</Text>\n            <Spacer/>\n            <Text mr={3} >{contact.number}</Text>\n          \n          <Button\n            name={contact.id}\n          \n            onClick={() => dispatch(deleteContact(contact.id))}\n          >\n            Delete\n          </Button>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { Form } from 'components/Form/Form';\nimport { Filter } from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader/Loader';\nimport { NameList } from 'components/NameList/NameList';\nimport { fetchContacts } from 'redux/operations';\n\n// import { Loader } from 'components/Loader/Loader';\n\n\nexport default function PhoneBook() {\n  const dispatch = useDispatch();\n \n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Phonebook</title>\n      </Helmet>\n      <Form />\n      <Filter />\n      <Loader />\n      <NameList />\n     \n      \n      \n    </>\n  );\n}"],"names":["nanoid","size","id","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","Form","useState","name","setName","number","setNumber","dispatch","useDispatch","handleInputChange","evt","currentTarget","value","contacts","useSelector","state","numberValue","onSubmit","preventDefault","map","item","includes","alert","setContact","I","className","style","onChange","type","placeholder","pattern","title","required","mb","Filter","getFilterValue","onInput","input","target","setFilterValue","Spacer","chakra","baseStyle","flex","justifySelf","alignSelf","displayName","createContext","hookName","providerName","AvatarStylesProvider","useAvatarStyles","initials","split","firstName","lastName","charAt","AvatarName","props","getInitials","rest","styles","jsx","role","__css","label","children","GenericAvatarIcon","jsxs","viewBox","color","width","height","fill","d","AvatarImage","src","srcSet","onError","onLoad","borderRadius","loading","iconLabel","icon","ignoreFallback","referrerPolicy","status","crossOrigin","sizes","setStatus","useEffect","imageRef","useRef","load","useCallback","flush","img","Image","srcset","onload","event","onerror","error","current","useSafeLayoutEffect","useImage","cloneElement","alt","objectFit","display","alignItems","justifyContent","textAlign","textTransform","fontWeight","position","flexShrink","Avatar","forwardRef","ref","useMultiStyleConfig","isLoaded","setIsLoaded","omitThemingProps","showBorder","onLoadProp","borderColor","avatarStyles","borderWidth","container","cx","dataAttr","callAllHandlers","errorMessage","ListStylesProvider","useListStyles","List","styleType","stylePosition","spacing","validChildren","Children","filter","child","isValidElement","getValidChildren","spacingStyle","mt","listStyleType","listStylePosition","as","marginStart","ListItem","Icon","NameList","filterValueFromStore","contactsFromStore","getContacts","normalizedFilter","toLowerCase","contact","mr","onClick","deleteContact","PhoneBook","fetchContacts","Helmet","Loader"],"sourceRoot":""}